@model List<QLSV.Models.CtKhhtSv>
@{
    ViewBag.Title = "Kế hoạch học tập sinh viên";
    Layout = "~/Areas/SV/Views/Shared/_LayoutHeader.cshtml";

    // Controller phải đặt ViewBag.DangKyMode = true/false
    bool dangKyMode = (bool)(ViewBag.DangKyMode ?? true);
    var currentMaNh = ViewBag.CurrentNamHoc as string;
    var currentMaHk = ViewBag.CurrentHocKy as string;

}

<!-- Hiển thị lỗi từ controller nếu có -->

@if (ViewBag.ErrorMessage != null)
{ <div class="alert alert-warning">
        @ViewBag.ErrorMessage </div>
}

<!-- Nút chuyển CTDT / KHHT -->

<div class="d-flex justify-content-start mb-4">
    <a href="@Url.Action("ChiTietChuongTrinhDaoTao","TblSinhVien")" class="btn btn-outline-primary me-2">
        Chương trình đào tạo
    </a>
    <a href="@Url.Action("ChiTiet_KHHTSV","TblSinhVien", new { maNh = currentMaNh, maHk = currentMaHk, dangKyMode = dangKyMode })"
    class="btn btn-primary">
        Đăng ký kế hoạch học tập
    </a>
</div>

<form method="get" class="mb-3">
    <div class="row mb-2">
        <div class="col-md-6 offset-md-3 d-flex align-items-center">
            <label for="namHocSelect" class="col-form-label me-2 text-end" style="min-width: 80px;">Năm học:</label>
            @Html.DropDownList("maNh", (List<SelectListItem>)ViewBag.NamHocs, "Tất cả năm học",
                              new { @class = "form-select w-100", id = "namHocSelect" })
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-md-6 offset-md-3 d-flex align-items-center">
            <label for="hocKySelect" class="col-form-label me-2 text-end" style="min-width: 80px;">Học kỳ:</label>
            @Html.DropDownList("maHk", (List<SelectListItem>)ViewBag.HocKys, "Tất cả học kỳ",
                              new { @class = "form-select w-100", id = "hocKySelect" })
        </div>
    </div>

    <div class="mt-4 text-end">
        <button type="submit" class="btn btn-primary">
            <i class="fas fa-filter me-1"></i>Lọc
        </button>

        <button type="button"
                class="btn btn-warning"
                onclick="window.location.href='@Url.Action("GoiYKHHT", "TblSinhvien", new { area = "SV", maKhht = ViewBag.CurrentMaKhht })'">
            Gợi ý KHHT
        </button>
    </div>

</form>


@if (Model == null || !Model.Any())
{
    <div class="alert alert-warning no-data-flag">
        Không có môn học nào phù hợp
    </div>
}
else
{
    <form id="formDangKy">
        @Html.AntiForgeryToken()

        <table class="table table-bordered table-hover">
            <thead class="table-light">
                <tr>
                    <th>STT</th>
                    <th>Mã môn</th>
                    <th>Tên môn</th>
                    <th>TC</th>
                    <th>Loại</th>
                    <th>Năm học</th>
                    <th>Học kỳ</th>
                    <th>Đăng ký</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int stt = 0;
                }
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@(++stt)</td>
                        <td>@item.MaMh</td>
                        <td class="text-start">@item.MaMhNavigation?.TenMh</td>
                        <td>@item.MaMhNavigation?.SoTc</td>
                        <td>@(item.LoaiMh ? "Bắt buộc" : "Tự chọn")</td>

                        <!-- Dropdown chọn Năm học -->
                        <td>
                            <select class="form-select form-select-sm namhoc-select" data-key="@($"{item.MaKhht}_{item.MaMh}")">
                                @foreach (var nh in (List<SelectListItem>)ViewBag.NamHocs)
                                {
                                    <option value="@nh.Value" @(item.MaNh == nh.Value ? "selected" : "")>@nh.Text</option>
                                }
                            </select>
                        </td>

                        <!-- Dropdown chọn Học kỳ -->
                        <td>
                            <select class="form-select form-select-sm hocky-select" data-key="@($"{item.MaKhht}_{item.MaMh}")">
                                @foreach (var hk in (List<SelectListItem>)ViewBag.HocKys)
                                {
                                    <option value="@hk.Value" @(item.MaHk == hk.Value ? "selected" : "")>@hk.Text</option>
                                }
                            </select>
                        </td>

                        <!-- Checkbox đăng ký -->
                        <td class="text-center">
                            @if (dangKyMode)
                            {
                                <input type="checkbox"
                                       class="monHocCheckbox"
                                       data-key="@($"{item.MaKhht}_{item.MaMh}")"
                                @(item.XacNhanDk == true ? "checked" : "") />
                            }
                            else
                            {
                                @if (item.XacNhanDk == true)
                                {
                                    <span class="badge bg-success">Đã đăng ký</span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">Chưa đăng ký</span>
                                }
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </form>
    <!-- Nút Thực hiện / Chỉnh sửa -->
    <div class="mt-3 text-end">
        @if (dangKyMode)
        {
            <form id="formDangKy">
                @Html.AntiForgeryToken()
                <input type="hidden" id="maNhHidden" value="@currentMaNh" />
                <input type="hidden" id="maHkHidden" value="@currentMaHk" />
                <button id="btnLuuDangKy" class="btn btn-success" type="button">
                    <i class="fas fa-save me-1"></i> Thực hiện
                </button>
            </form>
        }
        else
        {
            <a class="btn btn-primary"
               href="@Url.Action("ChiTiet_KHHTSV","TblSinhVien",
                    new { maNh = currentMaNh, maHk = currentMaHk, dangKyMode = true })">
                <i class="fas fa-pen me-1"></i> Chỉnh sửa đăng ký
            </a>
        }
    </div>

}

@section Scripts {
    <script>
        document.getElementById("formLoc")?.addEventListener("submit", function (e) {
        e.preventDefault();
        var maNh = document.getElementById("maNhSelect").value;
        var maHk = document.getElementById("maHkSelect").value;
        var dangKyMode = '@dangKyMode'.toLowerCase();
        window.location.href = '@Url.Action("ChiTiet_KHHTSV", "TblSinhVien")'
       + '?maNh=' + encodeURIComponent(maNh)
        + '\&maHk=' + encodeURIComponent(maHk)
        + '\&dangKyMode=' + encodeURIComponent(dangKyMode);
    });

    document.getElementById("btnLuuDangKy")?.addEventListener("click", function () {
        var courseElements = document.querySelectorAll(".monHocCheckbox");
        var dataCourses = [];

        courseElements.forEach(function (checkbox) {
            var key = checkbox.dataset.key;
            var selected = checkbox.checked;

            var maNh = document.querySelector('.namhoc-select[data-key="' + key + '"]')?.value;
            var maHk = document.querySelector('.hocky-select[data-key="' + key + '"]')?.value;

            dataCourses.push({
                Key: key,
                Selected: selected,
                MaNh: maNh,
                MaHk: maHk
            });
        });

        var token = document.querySelector('#formDangKy input[name="__RequestVerificationToken"]').value;

        fetch('@Url.Action("DangKyMonHoc", "TblSinhVien")', {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "RequestVerificationToken": token
            },
            body: JSON.stringify({
                Courses: dataCourses
            })
        })
        .then(res => res.json())
              .then(data => {
            // Nối message gốc
            let msg = data.message || "✅ Đăng ký thành công!";
            // Nếu có warnings (mảng), bổ sung vào thông báo
            if (Array.isArray(data.warnings) && data.warnings.length) {
                msg += "\n\nCác môn không thể đăng ký:";
                data.warnings.forEach(w => {
                    msg += "\n • " + w;
                });
            }
            alert(msg);
            window.location.reload();
        })

    .catch(async (error) => {
        try {
            const text = await error.response.text();
            alert("❌ Lỗi khi đăng ký môn học:\n" + text);
        } catch (e) {
            console.error('Chi tiết lỗi:', error);
            alert("❌ Lỗi khi đăng ký môn học: " + (error.message || "Không rõ nguyên nhân"));
        }
    });
            });
</script>

}
